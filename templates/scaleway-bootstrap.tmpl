#!/bin/bash

# Fetch environment

SCWIP=$(hostname  -I | awk '{print $1}')
{{ if not .NoIPv4 }}
SCWPUBLIC=$(curl http://v4.myip.ninja)
{{ end }}
METADATA=`curl http://169.254.42.42/conf`
MODEL=$(echo "$METADATA" | egrep COMMERCIAL_TYPE= | sed 's/COMMERCIAL_TYPE=//g')
CLUSTERID=$(echo "$METADATA" | egrep TAGS_0= | sed 's/TAGS_0=//g')
TINCIP=$(echo "$METADATA" | egrep TAGS_1= | sed 's/TAGS_1=//g')
ROLES=$(echo "$METADATA" | egrep TAGS_2= | sed 's/TAGS_2=//g')
IPV6_ADDRESS=$(echo "$METADATA" | egrep IPV6_ADDRESS= | sed 's/IPV6_ADDRESS=//g')
echo "HOST_PRIVATE_IPV4="$SCWIP >>/etc/environment
echo "HOST_IPV6="$IPV6_ADDRESS >>/etc/environment
echo "COREOS_PRIVATE_IPV4="$TINCIP >>/etc/environment
echo "COREOS_PUBLIC_IPV4="$SCWPUBLIC >>/etc/environment
echo "MODEL="$MODEL >>/etc/environment
mkdir -p /etc/pulcy
echo $CLUSTERID >/etc/pulcy/cluster-id
chmod 0400 /etc/pulcy/cluster-id
echo $TINCIP >/etc/pulcy/tinc-ip
echo $ROLES >/etc/pulcy/roles

# Create machine-id
rm -f /etc/.regen-machine-id
echo "{{ .MachineID }}" > /etc/machine-id

# Create core user
useradd -d /home/core -G docker,systemd-journal -m -U -u 500 -s /bin/bash -p $(uuidgen) core
mkdir -p /home/core/.ssh
cp -r /root/.ssh/* /home/core/.ssh/
chown -R core.core /home/core/.ssh
chmod -R og-rwx /home/core/.ssh
echo "core ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Link utilities
cd /usr/bin && ln -s /bin/mkdir && ln -s /bin/rmdir && ln -s /bin/bash
cd /usr/sbin && ln -s /sbin/lsmod && ln -s /sbin/modprobe
cd /usr/sbin && ln -s /sbin/iptables-save && ln -s /sbin/iptables-restore && ln -s /sbin/iptables
cd /usr/sbin && ln -s /sbin/ip6tables-save && ln -s /sbin/ip6tables-restore && ln -s /sbin/ip6tables

# Fix hosts
HOST=$(hostname)
echo "127.0.0.1 ${HOST}" >> /etc/hosts

# Install packages
export DEBIAN_FRONTEND=noninteractive
apt-get -q update
apt-get --force-yes -y -qq -o Dpkg::Options::="--force-confdef" upgrade < /dev/null
apt-get --force-yes -y -qq upgrade -o Dpkg::Options::="--force-confdef" docker-engine < /dev/null
apt-get --force-yes install -y -q -o Dpkg::Options::="--force-confdef" inetutils-traceroute tar tinc systemd-journal-remote < /dev/null
apt-get clean

# Patch rootfs
mkdir -p /etc/systemd/system/docker.service.d
echo "[Service]" > /etc/systemd/system/docker.service.d/99-docker.conf
echo "EnvironmentFile=/etc/environment" >> /etc/systemd/system/docker.service.d/99-docker.conf
systemctl disable docker; systemctl enable docker
systemctl enable systemd-journal-gatewayd.socket

# Prepare for reboot
sync
